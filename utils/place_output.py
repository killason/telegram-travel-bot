from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from loader import bot
from utils.user_context import set_context, get_context
from services.history_service import get_cached_places


def send_places_chunk(chat_id: int, user_id: int, place_type: str) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ª–µ–¥—É—é—â—É—é –ø–æ—Ä—Ü–∏—é –º–µ—Å—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.
    """

    places = get_cached_places(user_id, place_type=place_type) or []
    if not places:
        bot.send_message(chat_id, "–ü–æ–∫–∞ –ø—É—Å—Ç–æ. –í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å–Ω–æ–≤–∞.")
        return

    ctx = get_context(user_id) or {}
    offset = int(ctx.get("offset", 0))

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã—Ö–æ–¥–∞ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã
    if offset >= len(places):
        bot.send_message(chat_id, "–ë–æ–ª—å—à–µ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ üòï")
        return

    chunk = places[offset : offset + 3]

    for idx, place in enumerate(chunk):
        name = place["name"] or "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"
        address = place["address"]
        place_type_label = place["place_type"].capitalize()
        link = place["link"]
        place_id = place["place_id"]

        text = (
            f"<b>{name}</b>\n"
            f"üìç {address}\n"
            f"üè∑ {place_type_label}\n"
            f'<a href="{link}">üìç –ù–∞ –∫–∞—Ä—Ç–µ</a>'
        )

        markup = InlineKeyboardMarkup()

        # –§–ª–∞–≥ ‚Äî –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ª–∏ —ç—Ç–æ –≤ —Ç–µ–∫—É—â–µ–π —Ç—Ä–æ–π–∫–µ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ª–∏ –≤ —Å–ø–∏—Å–∫–µ –≤–æ–æ–±—â–µ
        is_last_in_chunk = idx == len(chunk) - 1
        is_last_in_list = (offset + idx + 1) >= len(places)

        # "–ü–æ–¥—Ä–æ–±–Ω–µ–µ" —Å –º–µ—Ç–∫–æ–π –ø–æ–∑–∏—Ü–∏–∏
        suffix = "last" if is_last_in_chunk else "mid"
        if is_last_in_list:
            suffix = "final"

        markup.add(
            InlineKeyboardButton(
                "üîé –ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data=f"details_{place_id}_{suffix}"
            )
        )

        if is_last_in_chunk:
            buttons = []
            if not is_last_in_list:
                buttons.append(
                    InlineKeyboardButton(
                        "‚û°Ô∏è –î–∞–ª–µ–µ", callback_data=f"more_places:{place_type}"
                    )
                )
            buttons.append(
                InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_categories")
            )
            markup.add(*buttons)

        bot.send_message(
            chat_id,
            text,
            parse_mode="HTML",
            disable_web_page_preview=True,
            reply_markup=markup,
        )

    # –û–±–Ω–æ–≤–ª—è–µ–º offset
    set_context(user_id, offset=offset + 3)
